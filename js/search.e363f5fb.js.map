{"version":3,"file":"js/search.e363f5fb.js","mappings":"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","sources":["webpack://wangyiyun-web/./src/request/api/search.js","webpack://wangyiyun-web/./src/views/Search.vue?4f53","webpack://wangyiyun-web/./src/views/Search.vue","webpack://wangyiyun-web/./src/views/Search.vue?ca79"],"sourcesContent":["// 导入 axios 实例\r\nimport service from \"..\";\r\n\r\n// 搜索单曲\r\nexport function getSearchSingle(data, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    // ！默认开始搜索 } 但解决了很多 bug，不多写 { 请求不了数据\r\n    url: `/search?keywords=${data}}&type=1&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 搜索歌手 data 歌手名 传入 num 页码返回相应数量的相关歌手\r\nexport function getSearchSinger(data, num) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/search?keywords=${data}&type=100&limit=${num*20}`\r\n  })\r\n}\r\n\r\n// 搜索专辑\r\nexport function getSearchAlbum(data, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/search?keywords=${data}&type=10&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 搜索视频\r\nexport function getSearchVideo(data, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/search?keywords=${data}&type=1014&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 搜索歌单\r\nexport function getSearchSongSheet(data, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/search?keywords=${data}&type=1000&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 搜索歌词\r\nexport function getSearchLyric(data, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/search?keywords=${data}&type=1006&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 搜索播客(电台)\r\nexport function getSearchPodcast(data) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/search?keywords=${data}&type=1009`\r\n  })\r\n}\r\n\r\n// 搜索声音\r\nexport function getSearchVoice(data, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/search?keywords=${data}&type=2000&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 搜索用户\r\nexport function getSearchUser(data, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/search?keywords=${data}&type=1002&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 获取歌手详情(需登录)\r\nexport function getArtistDetail(id, cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/artist/detail?id=${id}&cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取歌手粉丝数量(需登录)\r\nexport function getArtistFansNum(id, cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/artist/follow/count?id=${id}&cookie=${cookie}`\r\n  })\r\n}","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7d11a19e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"search\"\n};\nconst _hoisted_3 = {\n  class: \"search_top\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"interested\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"words\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"你可能感兴趣\")], -1));\n\nconst _hoisted_6 = {\n  class: \"cards\"\n};\nconst _hoisted_7 = {\n  class: \"singerCard_left\"\n};\nconst _hoisted_8 = {\n  class: \"headBox\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"singerCard_right\"\n};\nconst _hoisted_11 = {\n  class: \"singerInfo1\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"alias\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"alias\"\n};\nconst _hoisted_14 = {\n  class: \"singerInfo2\"\n};\nconst _hoisted_15 = {\n  class: \"albumCard_left\"\n};\nconst _hoisted_16 = {\n  class: \"headBox\"\n};\nconst _hoisted_17 = [\"src\"];\nconst _hoisted_18 = {\n  class: \"albumCard_right\"\n};\nconst _hoisted_19 = {\n  class: \"albumInfo1\"\n};\nconst _hoisted_20 = {\n  class: \"albumInfo2\"\n};\nconst _hoisted_21 = {\n  class: \"search_lists\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  const _directive_lazy = _resolveDirective(\"lazy\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, \"搜索 \" + _toDisplayString(this.searchKey), 1), $data.isSingerCard || $data.isAlbumCard ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [$data.isSingerCard ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"card singerCard\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.goSingerPage($data.artist.id))\n  }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"img\", {\n    src: $data.artist.avatar\n  }, null, 8, _hoisted_9), [[_directive_lazy, $data.artist.avatar]])])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", null, \"歌手：\" + _toDisplayString($data.artist.name), 1), $data.isAlia ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \"(\" + _toDisplayString($data.alia) + \")\", 1)) : _createCommentVNode(\"\", true), $data.isTransName ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13, \"(\" + _toDisplayString($data.transName) + \")\", 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", null, \"粉丝:\" + _toDisplayString($options.formatCount($data.fansCnt)) + \",歌曲:\" + _toDisplayString($data.artist.musicSize), 1)])])])) : _createCommentVNode(\"\", true), $data.isAlbumCard ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"card albumCard\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.goSongListDetail($data.album.id))\n  }, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_withDirectives(_createElementVNode(\"img\", {\n    src: $data.album.blurPicUrl\n  }, null, 8, _hoisted_17), [[_directive_lazy, $data.album.blurPicUrl]])])]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"span\", null, \"专辑：\" + _toDisplayString($data.album.name), 1)]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"span\", null, _toDisplayString($data.album.artist.name), 1)])])])) : _createCommentVNode(\"\", true)])])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.luYous, (item, index) => {\n    return _openBlock(), _createBlock(_component_router_link, {\n      to: item.path,\n      class: _normalizeClass(this.$route.path === item.path ? 'search_list search_list_active' : 'search_list'),\n      key: index\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(item.name), 1)]),\n      _: 2\n    }, 1032, [\"to\", \"class\"]);\n  }), 128))]), _createVNode(_component_router_view)])]);\n}","import store from '@/store/index.js'; // 导入 eventBus 模块\n\nimport bus from '@/components/home/eventBus.js';\nimport { getSearch } from '@/request/api/home.js';\nimport { getArtistDetail, getArtistFansNum } from '@/request/api/search.js';\nexport default {\n  data() {\n    return {\n      // 输入的搜索关键词\n      searchKey: '正在搜索中...',\n      // 路由去向\n      luYous: [{\n        path: '/Search/SearchSingle',\n        name: '单曲'\n      }, {\n        path: '/Search/SearchSinger',\n        name: '歌手'\n      }, {\n        path: '/Search/SearchAlbum',\n        name: '专辑'\n      }, {\n        path: '/Search/SearchVideo',\n        name: '视频'\n      }, {\n        path: '/Search/SearchSongSheet',\n        name: '歌单'\n      }, {\n        path: '/Search/SearchLyric',\n        name: '歌词'\n      }, {\n        path: '/Search/SearchPodcast',\n        name: '播客'\n      }, {\n        path: '/Search/SearchVoice',\n        name: '声音'\n      }, {\n        path: '/Search/SearchUser',\n        name: '用户'\n      }],\n      // 是否显示歌手卡片\n      isSingerCard: 0,\n      // 歌手 id\n      singerId: 0,\n      // 歌手信息对象\n      artist: {},\n      // 是否有别名\n      isAlia: 0,\n      // 歌手别名\n      alia: '',\n      // 是否有翻译名\n      isTransName: 0,\n      // 歌手翻译名\n      transName: '',\n      // 歌手粉丝数量\n      fansCnt: 0,\n      // 是否显示专辑卡片\n      isAlbumCard: 0,\n      // 专辑信息对象\n      album: {}\n    };\n  },\n\n  mounted() {\n    if (sessionStorage.getItem('searchKey')) this.searchKey = sessionStorage.getItem('searchKey');\n  },\n\n  methods: {\n    // 去往歌手页\n    goSingerPage(id) {\n      this.$router.push({\n        path: '/SingerPage',\n        query: {\n          id: id\n        }\n      });\n    },\n\n    // 去往专辑详情页\n    goSongListDetail(id) {\n      this.$router.push({\n        path: '/SongListDetail',\n        query: {\n          id: id,\n          // 1歌单 2专辑\n          type: 2\n        }\n      });\n    },\n\n    // 综合搜索\n    async getSearch() {\n      // 综合搜索\n      // let res = await getSearch(this.searchKey)\n      if (sessionStorage.getItem('searchKey')) {\n        let res = await getSearch(sessionStorage.getItem('searchKey')); // console.log('综合搜索', res);\n        // 第一位相关歌手\n\n        if (res.data.result.artist.artists) {\n          this.isSingerCard = 1; // console.log('第一位相关歌手artists', res.data.result.artist.artists[0]);\n\n          this.singerId = res.data.result.artist.artists[0].id;\n\n          if (sessionStorage.getItem(\"cookie\")) {\n            // 获取歌手详情\n            this.getArtistDetail(); // 获取粉丝数量\n\n            this.getArtistFansNum();\n          } else {\n            this.isSingerCard = 0;\n          }\n        } else {\n          this.isSingerCard = 0;\n        } // 第一张相关专辑\n\n\n        if (res.data.result.album.albums) {\n          this.isAlbumCard = 1; // console.log('albums', res.data.result.album.albums);\n\n          this.album = res.data.result.album.albums[0]; // console.log('album', this.album);\n        } else {\n          this.isAlbumCard = 0;\n        }\n      }\n    },\n\n    // 获取歌手详情\n    async getArtistDetail() {\n      let res = await getArtistDetail(this.singerId, sessionStorage.getItem(\"cookie\")); // console.log('获取歌手详情', res);\n\n      this.artist = res.data.data.artist; // console.log('歌手信息对象', this.artist);\n      // 是否有别名\n\n      if (this.artist.alias[0]) {\n        this.isAlia = 1;\n        this.alia = this.artist.alias[0]; // console.log('歌手别名', this.alia);\n      } else {\n        this.isAlia = 0;\n      } // 是否有翻译名\n\n\n      if (this.artist.transNames[0]) {\n        this.isTransName = 1;\n        this.transName = this.artist.transNames[0]; // console.log('歌手翻译名', this.transName);\n      } else {\n        this.isTransName = 0;\n      }\n    },\n\n    // 获取歌手粉丝数量\n    async getArtistFansNum() {\n      const res = await getArtistFansNum(this.singerId, sessionStorage.getItem(\"cookie\")); // console.log('获取粉丝数量', res);\n\n      this.fansCnt = res.data.data.fansCnt; // console.log('粉丝数量', this.fansCnt);\n    },\n\n    // 对粉丝数量的处理\n    formatCount(num) {\n      return this.$formatCount(num);\n    }\n\n  },\n\n  // 写在 created 阶段（现成的解决方案）\n  created() {\n    // 通过 eventBus 接收从 TopNav 传过来的 searchKey\n    bus.on('searchKey', val => {\n      // console.log('搜索 ', val);\n      this.searchKey = val;\n    });\n  },\n\n  watch: {\n    // 搜索关键词改变即触发搜索\n    searchKey() {\n      this.getSearch();\n    }\n\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./Search.vue?vue&type=template&id=7d11a19e&scoped=true\"\nimport script from \"./Search.vue?vue&type=script&lang=js\"\nexport * from \"./Search.vue?vue&type=script&lang=js\"\n\nimport \"./Search.vue?vue&type=style&index=0&id=7d11a19e&lang=less&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\86134\\\\Desktop\\\\网易云电脑端\\\\wangyiyun-web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d11a19e\"]])\n\nexport default __exports__"],"names":["getSearchSingle","data","limit","offset","service","method","url","getSearchSinger","num","getSearchAlbum","getSearchVideo","getSearchSongSheet","getSearchLyric","getSearchPodcast","getSearchVoice","getSearchUser","getArtistDetail","id","cookie","getArtistFansNum","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","render","_ctx","_cache","$props","$setup","$data","$options","_component_router_link","_component_router_view","_directive_lazy","this","searchKey","isSingerCard","isAlbumCard","onClick","$event","goSingerPage","artist","src","avatar","name","isAlia","alia","isTransName","transName","formatCount","fansCnt","musicSize","goSongListDetail","album","blurPicUrl","luYous","item","index","to","path","$route","default","singerId","mounted","sessionStorage","getItem","methods","$router","push","query","type","async","res","result","artists","albums","alias","transNames","$formatCount","created","val","watch","getSearch","__exports__"],"sourceRoot":""}