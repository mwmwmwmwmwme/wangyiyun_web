{"version":3,"file":"js/221.90c4d45a.js","mappings":"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","sources":["webpack://wangyiyun-web/./src/request/api/discoverMusic.js","webpack://wangyiyun-web/./src/components/menu/DiscoverMusic/DiscoverLatestMusic/DiscoverNewSong.vue?f2b6","webpack://wangyiyun-web/./src/components/menu/DiscoverMusic/DiscoverLatestMusic/DiscoverNewSong.vue","webpack://wangyiyun-web/./src/components/menu/DiscoverMusic/DiscoverLatestMusic/DiscoverNewSong.vue?f729"],"sourcesContent":["// 导入 axios 实例\r\nimport service from \"..\";\r\n\r\n// 获取首页各个模块信息\r\nexport function getHomePage() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/homepage/block/page'\r\n  })\r\n}\r\n\r\n// 获取歌单分类\r\nexport function getSongListClassification() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/catlist'\r\n  })\r\n}\r\n\r\n// 获取热门的歌单分类\r\nexport function getHotSongListClassification() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/hot'\r\n  })\r\n}\r\n\r\n// 获取歌单 (网友精选碟) 默认每次请求一页 100个歌单\r\nexport function getSongList(cat, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/playlist?cat=${cat}&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 获取精品歌单标签列表\r\nexport function getHighQualityTags() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/highquality/tags'\r\n  })\r\n}\r\n\r\n// 获取精品歌单\r\nexport function getHighQualitySongList(cat) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/playlist/highquality?cat=${cat}`\r\n  })\r\n}\r\n\r\n// 获取所有榜单\r\nexport function getAllLists() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/toplist'\r\n  })\r\n}\r\n\r\n// 获取新歌速递歌曲\r\nexport function getNewSong(data) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/song?type=${data}`\r\n  })\r\n}\r\n\r\n// 获取新碟上架专辑，分为 weekData 和 monthData\r\nexport function getNewDisc(area, type) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/album?offset=0&limit=30&area=${area}&type=${type}`\r\n  })\r\n}\r\n\r\n// 获取歌手分类列表 最多返回100条数据，且页面渲染只能渲染到第 96 (16行)\r\nexport function getSingersClassification(type, area, initial) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/artist/list?type=${type}&area=${area}&initial=${initial}&offset=0&limit=100`\r\n  })\r\n}\r\n\r\n// 获取歌手详情 \r\nexport function getArtistDetail(id) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/artist/detail?id=${id}`\r\n  })\r\n}\r\n\r\n// 获取每日推荐歌单(需要登录，携带 cookie)\r\nexport function getDailyRecommendedSongList(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/recommend/resource?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取每日推荐歌曲(需要登录，携带 cookie)\r\nexport function getDailyRecommendedSongs(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/recommend/songs?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取推荐歌单\r\nexport function getRecommendedSongList(limit) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/personalized?limit=${limit}`\r\n  })\r\n}\r\n\r\n// 获取热门电台\r\nexport function getHotPodcasts(limit) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/dj/hot?limit=${limit}`\r\n  })\r\n}\r\n\r\n// 独家放送(入口列表)\r\nexport function getExclusiveRelease() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/personalized/privatecontent'\r\n  })\r\n}\r\n\r\n// 获取独家放送列表\r\nexport function getPrivatecontentList(limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/personalized/privatecontent/list?limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 获取推荐 mv \r\nexport function getPersonalizedMv() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/personalized/mv'\r\n  })\r\n}\r\n\r\n// 获取历史日推可用日期列表(需要登录，携带 cookie)\r\nexport function getHistoryRecommend(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/history/recommend/songs?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取历史日推详情数据(需要登录，携带 cookie)\r\nexport function getHistoryRecommendDetail(cookie, date) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/history/recommend/songs/detail?date=${date}&cookie=${cookie}`\r\n  })\r\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, vShow as _vShow, withCtx as _withCtx, createVNode as _createVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-74f9e3c4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"top\"\n};\nconst _hoisted_3 = {\n  class: \"top_left\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"top_right\\\" data-v-74f9e3c4><div class=\\\"playAll\\\" data-v-74f9e3c4><svg class=\\\"icon\\\" aria-hidden=\\\"true\\\" data-v-74f9e3c4><use xlink:href=\\\"#icon-bofang\\\" data-v-74f9e3c4></use></svg><span data-v-74f9e3c4>播放全部</span></div><div class=\\\"collectAll\\\" data-v-74f9e3c4><svg class=\\\"icon\\\" aria-hidden=\\\"true\\\" data-v-74f9e3c4><use xlink:href=\\\"#icon-24gl-folderHeart\\\" data-v-74f9e3c4></use></svg><span data-v-74f9e3c4>收藏全部</span></div></div>\", 1);\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\"载入中...\");\n\nconst _hoisted_6 = {\n  class: \"no\"\n};\nconst _hoisted_7 = {\n  class: \"head\"\n};\nconst _hoisted_8 = [\"src\"];\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"playKey\"\n}, [/*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"icon\",\n  \"aria-hidden\": \"true\"\n}, [/*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-yousanjiao\"\n})])], -1));\n\nconst _hoisted_10 = {\n  class: \"songName\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"alias\"\n};\nconst _hoisted_12 = {\n  class: \"singer\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  key: 0,\n  class: \"diagonal\"\n};\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  class: \"duration\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_van_loading = _resolveComponent(\"van-loading\");\n\n  const _component_lazy_component = _resolveComponent(\"lazy-component\");\n\n  const _directive_lazy = _resolveDirective(\"lazy\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.changeType(0)),\n    ref: \"type0\",\n    class: \"active\"\n  }, \"全部\", 512), _createElementVNode(\"span\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.changeType(7)),\n    ref: \"type7\"\n  }, \"华语\", 512), _createElementVNode(\"span\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.changeType(96)),\n    ref: \"type96\"\n  }, \"欧美\", 512), _createElementVNode(\"span\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.changeType(16)),\n    ref: \"type16\"\n  }, \"韩国\", 512), _createElementVNode(\"span\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.changeType(8)),\n    ref: \"type8\"\n  }, \"日本\", 512)]), _hoisted_4]), _withDirectives(_createVNode(_component_van_loading, {\n    vertical: \"\",\n    type: \"spinner\"\n  }, {\n    default: _withCtx(() => [_hoisted_5]),\n    _: 1\n  }, 512), [[_vShow, $data.isLoading == 1]]), _createVNode(_component_lazy_component, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.newSongs, (item, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass(index == $data.zero || index % 2 == 0 ? 'even song' : 'odd song')\n      }, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString($options.formatIndex(index + 1)), 1), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"img\", {\n        src: item.album.blurPicUrl\n      }, null, 8, _hoisted_8), [[_directive_lazy, item.album.blurPicUrl]]), _hoisted_9]), _createElementVNode(\"div\", _hoisted_10, [_createTextVNode(_toDisplayString(item.name) + \" \", 1), item.alias != '' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, \"(\" + _toDisplayString(item.alias[0]) + \")\", 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.artists, (item1, index1) => {\n        return _openBlock(), _createElementBlock(\"span\", {\n          key: index1,\n          onClick: $event => $options.goSingerPage(item1.id)\n        }, [_createTextVNode(_toDisplayString(item1.name) + \" \", 1), index1 < item.artists.length - 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, \"/\")) : _createCommentVNode(\"\", true)], 8, _hoisted_13);\n      }), 128))]), _createElementVNode(\"div\", {\n        class: \"album\",\n        onClick: $event => $options.goDetail(item.album.id)\n      }, _toDisplayString(item.album.name), 9, _hoisted_15), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"span\", null, _toDisplayString(this.formatDuration(item.duration)), 1)])], 2);\n    }), 128))]),\n    _: 1\n  })]);\n}","// 导入 store 才可以修改里面的属性，若在计算属性中用 mapState 解构的是只读不可修改的 \nimport store from '@/store/index.js';\nimport { getNewSong } from '@/request/api/discoverMusic.js';\nexport default {\n  data() {\n    return {\n      // 零\n      zero: 0,\n      // 请求回来的原数据\n      resData: [],\n      // 要渲染的新歌速递歌曲\n      newSongs: [],\n      // 渲染总数\n      total: 0,\n      // 每次插入渲染的 DOM 数量\n      once: 10,\n      // 当前已经渲染 DOM 的总数，从 20 开始，因为一开始已经渲染了 20 首\n      countOfRender: 20,\n      // 是否显示加载中\n      isLoading: 1\n    };\n  },\n\n  // 接收父组件传过来的值\n  props: ['scrollTop'],\n\n  async mounted() {\n    // 在 Local Storage(本地存储) 中检查是否有\n    let vuelsNewSongs = this.$ls.get('getNewSong', 'null');\n    console.log(vuelsNewSongs); // 在本地中，不用重新获取\n\n    if (vuelsNewSongs != 'null') this.resData = vuelsNewSongs.data.data; // 本地已删除，则重新获取\n\n    if (vuelsNewSongs == 'null') {\n      // 获取新歌速递全部歌曲\n      let res = await getNewSong(0);\n      console.log(res); // 转存到本地，有效期为 validityTime\n\n      this.$ls.set('get0NewSong', res, store.state.validityTime); // 把请求回来的原数据放到存放原数据的暂存数组中(该数组不是渲染数据的数组)\n\n      this.resData = res.data.data;\n    } // 渲染总数\n\n\n    this.total = this.resData.length; // 刚开始只渲染 20 条数据\n\n    this.newSongs = this.resData.slice(0, 20);\n  },\n\n  methods: {\n    // 格式化单曲序号\n    formatIndex(index) {\n      return this.$formatIndex(index);\n    },\n\n    // 格式化播放时长\n    formatDuration(time) {\n      return this.$formatDuration(time);\n    },\n\n    // 点击不同语种，渲染不同的列表\n    changeType(type) {\n      // 调用检查是否在本地方法\n      this.checkType(type); // 调用排他方法\n\n      this.typeExclusive(type);\n    },\n\n    // 请求不同语种的歌曲，按不同的类型存到本地，封装为方法，传入歌曲语种 type\n    async checkType(type) {\n      // 存储名为拼接字符串\n      let vuelsName = 'get' + type + 'NewSong'; // 在 Local Storage(本地存储) 中检查是否有\n\n      let vuelsTypeNewSongs = this.$ls.get(vuelsName, 'null');\n      console.log(vuelsTypeNewSongs); // 在本地中，不用重新获取，直接把本地数据转存到存放原数据的 resData[]\n\n      if (vuelsTypeNewSongs != 'null') this.resData = vuelsTypeNewSongs.data.data; // 本地已删除，则重新获取\n\n      if (vuelsTypeNewSongs == 'null') {\n        // 获取新歌速递全部歌曲\n        let res = await getNewSong(type); // console.log(res);\n\n        try {\n          // 无异常则转存到本地\n          this.$ls.set(vuelsName, res, store.state.validityTime);\n        } catch (e) {\n          // 产生异常且最后一个单词为 quota，表示 localstorage 容量不够，清空所有 key，再发起该页面的数据请求\n          if (e.name.toUpperCase().indexOf('QUOTA') >= 0) this.$ls.clear();\n          this.$ls.set(vuelsName, res, store.state.validityTime);\n        } // 把请求回来的原数据放到存放原数据的暂存数组(该数组不是渲染数据的数组)中\n\n\n        this.resData = res.data.data;\n      } // 切换页面后刚开始也只渲染 20 条数据\n\n\n      this.newSongs = this.resData.slice(0, 20); // 重置当前已经渲染 DOM 的总数\n\n      this.countOfRender = 20; // 渲染总数\n\n      this.total = this.resData.length;\n    },\n\n    // 排他，传入当前 active 的 type ，只有该 type 保留 active 类\n    typeExclusive(type) {\n      this.$refs.type0.classList.remove('active');\n      this.$refs.type7.classList.remove('active');\n      this.$refs.type96.classList.remove('active');\n      this.$refs.type16.classList.remove('active');\n      this.$refs.type8.classList.remove('active');\n      if (type == 0) this.$refs.type0.classList.add('active');\n      if (type == 7) this.$refs.type7.classList.add('active');\n      if (type == 96) this.$refs.type96.classList.add('active');\n      if (type == 16) this.$refs.type16.classList.add('active');\n      if (type == 8) this.$refs.type8.classList.add('active');\n    },\n\n    // 每次只渲染指定条数据(每次只加指定条数据到渲染数组中)，本文为 CSDN博主「Vgbire」的原创，原文 https://blog.csdn.net/RkHker/article/details/109549263\n    // loop() {\n    //   setTimeout(() => {\n    //     const temp = [];\n    //     for (let i = 0; i < this.once; i++) {\n    //       // 当 DOM 渲染完就退出\n    //       if (this.countOfRender >= this.total) return;\n    //       // 把请求回来的原数据先加到暂存数组中\n    //       temp.push(this.resData[this.countOfRender]);\n    //       // 当前已经渲染 DOM 的总数\n    //       this.countOfRender += 1;\n    //     }\n    //     // 然后把暂存数组的数据加到需要渲染的数组中，concat() 将一个数组合并到另一个数组\n    //     this.newSongs = this.newSongs.concat(temp);\n    //     // 递归\n    //     this.loop();\n    //     // console.log(temp); // 100 首歌，每次加20首到渲染的数据数组中，分5次\n    //   }, 2000);\n    // },\n    scrollLoad() {\n      // console.log(this.countOfRender, this.total);\n      // 滚动父盒子一段距离(scrollTop 改变的时候)往渲染数据的数组增加数据\n      const temp = [];\n\n      for (let i = 0; i < this.once; i++) {\n        // 当 DOM 渲染完就退出\n        if (this.countOfRender >= this.total) return; // 把请求回来的原数据先加到暂存数组中\n\n        temp.push(this.resData[this.countOfRender]); // 当前已经渲染 DOM 的总数\n\n        this.countOfRender += 1;\n      } // 然后把暂存数组的数据加到需要渲染的数组中，concat() 将一个数组合并到另一个数组\n\n\n      this.newSongs = this.newSongs.concat(temp);\n      console.log('temp', temp);\n    },\n\n    // 去往专辑详情页\n    goDetail(id) {\n      this.$router.push({\n        path: '/SongListDetail',\n        query: {\n          id: id,\n          // 1歌单 2专辑\n          type: 2\n        }\n      });\n    },\n\n    // 去往歌手页\n    goSingerPage(id) {\n      this.$router.push({\n        path: '/SingerPage',\n        query: {\n          id: id\n        }\n      });\n    }\n\n  },\n  watch: {\n    // 从父组件接收回来的 scrollTop 改变的时候才会触发\n    scrollTop() {\n      // console.log('子：' + this.scrollTop);\n      this.scrollLoad();\n    },\n\n    // 有渲染的数据时关闭加载组件\n    newSongs() {\n      if (this.newSongs.length !== 0) this.isLoading = 0;\n    }\n\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./DiscoverNewSong.vue?vue&type=template&id=74f9e3c4&scoped=true\"\nimport script from \"./DiscoverNewSong.vue?vue&type=script&lang=js\"\nexport * from \"./DiscoverNewSong.vue?vue&type=script&lang=js\"\n\nimport \"./DiscoverNewSong.vue?vue&type=style&index=0&id=74f9e3c4&lang=less&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\86134\\\\Desktop\\\\网易云电脑端\\\\wangyiyun-web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-74f9e3c4\"]])\n\nexport default __exports__"],"names":["getHomePage","service","method","url","getSongListClassification","getHotSongListClassification","getSongList","cat","limit","offset","getHighQualityTags","getHighQualitySongList","getAllLists","getNewSong","data","getNewDisc","area","type","getSingersClassification","initial","getDailyRecommendedSongList","cookie","getDailyRecommendedSongs","getRecommendedSongList","getHotPodcasts","getExclusiveRelease","getPrivatecontentList","getPersonalizedMv","getHistoryRecommend","getHistoryRecommendDetail","date","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_","_hoisted_10","_hoisted_11","key","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","render","_ctx","_cache","$props","$setup","$data","$options","_component_van_loading","_component_lazy_component","_directive_lazy","onClick","$event","changeType","ref","vertical","default","isLoading","newSongs","item","index","zero","formatIndex","src","album","blurPicUrl","name","alias","artists","item1","index1","goSingerPage","id","length","goDetail","this","formatDuration","duration","resData","total","once","countOfRender","props","async","vuelsNewSongs","$ls","get","console","log","res","set","store","slice","methods","$formatIndex","time","$formatDuration","checkType","typeExclusive","vuelsName","vuelsTypeNewSongs","e","toUpperCase","indexOf","clear","$refs","type0","classList","remove","type7","type96","type16","type8","add","scrollLoad","temp","i","push","concat","$router","path","query","watch","scrollTop","__exports__"],"sourceRoot":""}