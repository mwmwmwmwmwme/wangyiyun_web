{"version":3,"file":"js/privatecontentList.6822722d.js","mappings":"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","sources":["webpack://wangyiyun-web/./src/request/api/discoverMusic.js","webpack://wangyiyun-web/./src/views/PrivatecontentList.vue?0234","webpack://wangyiyun-web/./src/views/PrivatecontentList.vue","webpack://wangyiyun-web/./src/views/PrivatecontentList.vue?ea2a"],"sourcesContent":["// 导入 axios 实例\r\nimport service from \"..\";\r\n\r\n// 获取首页各个模块信息\r\nexport function getHomePage() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/homepage/block/page'\r\n  })\r\n}\r\n\r\n// 获取歌单分类\r\nexport function getSongListClassification() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/catlist'\r\n  })\r\n}\r\n\r\n// 获取热门的歌单分类\r\nexport function getHotSongListClassification() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/hot'\r\n  })\r\n}\r\n\r\n// 获取歌单 (网友精选碟) 默认每次请求一页 100个歌单\r\nexport function getSongList(cat, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/playlist?cat=${cat}&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 获取精品歌单标签列表\r\nexport function getHighQualityTags() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/highquality/tags'\r\n  })\r\n}\r\n\r\n// 获取精品歌单\r\nexport function getHighQualitySongList(cat) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/playlist/highquality?cat=${cat}`\r\n  })\r\n}\r\n\r\n// 获取所有榜单\r\nexport function getAllLists() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/toplist'\r\n  })\r\n}\r\n\r\n// 获取新歌速递歌曲\r\nexport function getNewSong(data) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/song?type=${data}`\r\n  })\r\n}\r\n\r\n// 获取新碟上架专辑，分为 weekData 和 monthData\r\nexport function getNewDisc(area, type) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/album?offset=0&limit=30&area=${area}&type=${type}`\r\n  })\r\n}\r\n\r\n// 获取歌手分类列表 最多返回100条数据，且页面渲染只能渲染到第 96 (16行)\r\nexport function getSingersClassification(type, area, initial) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/artist/list?type=${type}&area=${area}&initial=${initial}&offset=0&limit=100`\r\n  })\r\n}\r\n\r\n// 获取歌手详情 \r\nexport function getArtistDetail(id) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/artist/detail?id=${id}`\r\n  })\r\n}\r\n\r\n// 获取每日推荐歌单(需要登录，携带 cookie)\r\nexport function getDailyRecommendedSongList(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/recommend/resource?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取每日推荐歌曲(需要登录，携带 cookie)\r\nexport function getDailyRecommendedSongs(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/recommend/songs?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取推荐歌单\r\nexport function getRecommendedSongList(limit) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/personalized?limit=${limit}`\r\n  })\r\n}\r\n\r\n// 获取热门电台\r\nexport function getHotPodcasts(limit) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/dj/hot?limit=${limit}`\r\n  })\r\n}\r\n\r\n// 独家放送(入口列表)\r\nexport function getExclusiveRelease() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/personalized/privatecontent'\r\n  })\r\n}\r\n\r\n// 获取独家放送列表\r\nexport function getPrivatecontentList(limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/personalized/privatecontent/list?limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 获取推荐 mv \r\nexport function getPersonalizedMv() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/personalized/mv'\r\n  })\r\n}\r\n\r\n// 获取历史日推可用日期列表(需要登录，携带 cookie)\r\nexport function getHistoryRecommend(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/history/recommend/songs?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取历史日推详情数据(需要登录，携带 cookie)\r\nexport function getHistoryRecommendDetail(cookie, date) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/history/recommend/songs/detail?date=${date}&cookie=${cookie}`\r\n  })\r\n}","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-449836f9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"big_container\",\n  ref: \"big_container\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container_top\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"独家放送\")], -1));\n\nconst _hoisted_4 = {\n  class: \"lists\",\n  ref: \"lists\"\n};\nconst _hoisted_5 = {\n  class: \"cover\"\n};\nconst _hoisted_6 = [\"src\", \"onClick\"];\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"icon_box\"\n}, null, -1));\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"icon\",\n  \"aria-hidden\": \"true\"\n}, [/*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-bofang\"\n})], -1));\n\nconst _hoisted_9 = {\n  class: \"copywriter\"\n};\nconst _hoisted_10 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_lazy = _resolveDirective(\"lazy\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.privatecontentList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass((index + 1) % 3 == 0 ? 'list listRight' : 'list'),\n      key: item.id\n    }, [_createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"img\", {\n      src: item.picUrl,\n      onClick: $event => $options.goVideoPlayer(item.id)\n    }, null, 8, _hoisted_6), [[_directive_lazy, item.picUrl]]), _hoisted_7, _hoisted_8]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", {\n      onClick: $event => $options.goVideoPlayer(item.id)\n    }, _toDisplayString(item.copywriter), 9, _hoisted_10)])], 2);\n  }), 128))], 512)])], 512);\n}","import { getPrivatecontentList } from '@/request/api/discoverMusic.js';\nexport default {\n  data() {\n    return {\n      // 独家放送列表\n      privatecontentList: [],\n      // 滚动位置\n      scrollTop: 0,\n      // 渲染总数\n      total: 0,\n      // 每次插入渲染的 DOM 数量 2 行(6个)\n      once: 6,\n      // 当前已经渲染 DOM 的总数，从 30 开始，因为初始渲染 30 条\n      countOfRender: 30,\n      // 请求回来的原数据\n      resData: []\n    };\n  },\n\n  async mounted() {\n    // 获取独家放送列表(最多获取 100 条)\n    const res = await getPrivatecontentList(100, 0); // console.log('获取独家放送列表', res);\n    // this.privatecontentList = res.data.result\n    // 把请求回来的原数据放到存放原数据的暂存数组中(该数组不是渲染数据的数组)\n\n    this.resData = res.data.result; // console.log('独家放送列表原数据', this.resData);\n    // 渲染总数\n\n    this.total = this.resData.length; // 刚开始只渲染 30 条数据\n\n    this.privatecontentList = this.resData.slice(0, 30); // 重置当前已经渲染 DOM 的总数\n\n    this.countOfRender = 30; // 尝试用 js 写入渲染内容，但对应类名样式不应用？\n    // console.log('this.privatecontentList', this.privatecontentList);\n    // // this.privatecontentList 是一个数组元素全是对象的数组\n    // this.$refs.lists.innerHTML = this.privatecontentList.map((item, index) => {\n    //   // console.log(item);\n    //   // 对象解构\n    //   const { picUrl, copywriter } = item\n    //   return `\n    //   <div class=\"(${index} + 1) % 3 == 0 ? 'list listRight' : 'list'\">\n    //     <div class=\"cover\">\n    //       <img src='${picUrl}' v-lazy=\"${picUrl}\">\n    //       <div class=\"icon_box\"></div>\n    //       <svg class=\"icon\" aria-hidden=\"true\">\n    //         <use xlink:href=\"#icon-bofang\"></use>\n    //       </svg>\n    //     </div>\n    //     <div class=\"copywriter\"><span>${copywriter}</span></div>\n    //   </div>\n    //   `\n    // })\n  },\n\n  created() {\n    this.listenerFunction();\n  },\n\n  beforeDestroy() {\n    // 去除监听器\n    document.removeEventListener(\"scroll\", this.listenerFunction);\n  },\n\n  methods: {\n    // 给监听器绑定滚动方法 handleScroll()\n    listenerFunction(e) {\n      // 因为属于在主页面使用滚动事件，故可对 document 添加监听器\n      document.addEventListener('scroll', this.handleScroll, true);\n    },\n\n    // 滚动方法\n    handleScroll() {\n      let a = this.$refs.big_container.scrollTop; // 每滚动 400px 打印一次，大约为 2 行(6个)\n\n      if (a % 400 === 0) this.scrollTop = a;\n    },\n\n    // 每次只渲染指定条数据(每次只加指定条数据到渲染数组中)\n    // 页面最多渲染 32 行，即 32 * 3 = 96 条数据，申请了 100 条 ，后面 4 条小于 this.once(6条) 故无渲染\n    async scrollLoad() {\n      // console.log('已渲染总数:', this.countOfRender, '需渲染总数:', this.total);\n      const temp = [];\n\n      for (let i = 0; i < this.once; i++) {\n        // 当 DOM 渲染完就退出\n        if (this.countOfRender >= this.total) return; // 还没渲染完继续添加\n        else {\n          // 把请求回来的原数据先加到暂存数组中\n          temp.push(this.resData[this.countOfRender]); // 当前已经渲染 DOM 的总数\n\n          this.countOfRender += 1;\n        }\n      } // 然后把暂存数组的数据加到需要渲染的数组中，concat() 将一个数组合并到另一个数组\n\n\n      this.privatecontentList = this.privatecontentList.concat(temp); // console.log('temp', temp);\n    },\n\n    // 去往 mv播放页\n    goVideoPlayer(mvid) {\n      this.$router.push({\n        path: '/VideoPlayer',\n        query: {\n          mvid: mvid,\n          type: 1\n        }\n      });\n    }\n\n  },\n  watch: {\n    scrollTop() {\n      // console.log('滚动位置改变为' + this.scrollTop, '触发滚动加载方法！');\n      this.scrollLoad();\n    }\n\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./PrivatecontentList.vue?vue&type=template&id=449836f9&scoped=true\"\nimport script from \"./PrivatecontentList.vue?vue&type=script&lang=js\"\nexport * from \"./PrivatecontentList.vue?vue&type=script&lang=js\"\n\nimport \"./PrivatecontentList.vue?vue&type=style&index=0&id=449836f9&lang=less&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\86134\\\\Desktop\\\\网易云电脑端\\\\wangyiyun-web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-449836f9\"]])\n\nexport default __exports__"],"names":["getHomePage","service","method","url","getSongListClassification","getHotSongListClassification","getSongList","cat","limit","offset","getHighQualityTags","getHighQualitySongList","getAllLists","getNewSong","data","getNewDisc","area","type","getSingersClassification","initial","getDailyRecommendedSongList","cookie","getDailyRecommendedSongs","getRecommendedSongList","getHotPodcasts","getExclusiveRelease","getPrivatecontentList","getPersonalizedMv","getHistoryRecommend","getHistoryRecommendDetail","date","_withScopeId","n","_hoisted_1","class","ref","_hoisted_2","_hoisted_3","_","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","render","_ctx","_cache","$props","$setup","$data","$options","_directive_lazy","privatecontentList","item","index","key","id","src","picUrl","onClick","$event","goVideoPlayer","copywriter","scrollTop","total","once","countOfRender","resData","async","res","this","result","length","slice","created","listenerFunction","beforeDestroy","document","removeEventListener","methods","e","addEventListener","handleScroll","a","$refs","big_container","temp","i","push","concat","mvid","$router","path","query","watch","scrollLoad","__exports__"],"sourceRoot":""}