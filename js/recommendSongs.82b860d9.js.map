{"version":3,"file":"js/recommendSongs.82b860d9.js","mappings":"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","sources":["webpack://wangyiyun-web/./src/request/api/discoverMusic.js","webpack://wangyiyun-web/./src/views/RecommendSongs.vue?640d","webpack://wangyiyun-web/./src/views/RecommendSongs.vue","webpack://wangyiyun-web/./src/views/RecommendSongs.vue?e64c"],"sourcesContent":["// 导入 axios 实例\r\nimport service from \"..\";\r\n\r\n// 获取首页各个模块信息\r\nexport function getHomePage() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/homepage/block/page'\r\n  })\r\n}\r\n\r\n// 获取歌单分类\r\nexport function getSongListClassification() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/catlist'\r\n  })\r\n}\r\n\r\n// 获取热门的歌单分类\r\nexport function getHotSongListClassification() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/hot'\r\n  })\r\n}\r\n\r\n// 获取歌单 (网友精选碟) 默认每次请求一页 100个歌单\r\nexport function getSongList(cat, limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/playlist?cat=${cat}&limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 获取精品歌单标签列表\r\nexport function getHighQualityTags() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/playlist/highquality/tags'\r\n  })\r\n}\r\n\r\n// 获取精品歌单\r\nexport function getHighQualitySongList(cat) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/playlist/highquality?cat=${cat}`\r\n  })\r\n}\r\n\r\n// 获取所有榜单\r\nexport function getAllLists() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/toplist'\r\n  })\r\n}\r\n\r\n// 获取新歌速递歌曲\r\nexport function getNewSong(data) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/song?type=${data}`\r\n  })\r\n}\r\n\r\n// 获取新碟上架专辑，分为 weekData 和 monthData\r\nexport function getNewDisc(area, type) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/top/album?offset=0&limit=30&area=${area}&type=${type}`\r\n  })\r\n}\r\n\r\n// 获取歌手分类列表 最多返回100条数据，且页面渲染只能渲染到第 96 (16行)\r\nexport function getSingersClassification(type, area, initial) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/artist/list?type=${type}&area=${area}&initial=${initial}&offset=0&limit=100`\r\n  })\r\n}\r\n\r\n// 获取歌手详情 \r\nexport function getArtistDetail(id) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/artist/detail?id=${id}`\r\n  })\r\n}\r\n\r\n// 获取每日推荐歌单(需要登录，携带 cookie)\r\nexport function getDailyRecommendedSongList(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/recommend/resource?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取每日推荐歌曲(需要登录，携带 cookie)\r\nexport function getDailyRecommendedSongs(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/recommend/songs?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取推荐歌单\r\nexport function getRecommendedSongList(limit) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/personalized?limit=${limit}`\r\n  })\r\n}\r\n\r\n// 获取热门电台\r\nexport function getHotPodcasts(limit) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/dj/hot?limit=${limit}`\r\n  })\r\n}\r\n\r\n// 独家放送(入口列表)\r\nexport function getExclusiveRelease() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/personalized/privatecontent'\r\n  })\r\n}\r\n\r\n// 获取独家放送列表\r\nexport function getPrivatecontentList(limit, offset) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/personalized/privatecontent/list?limit=${limit}&offset=${offset}`\r\n  })\r\n}\r\n\r\n// 获取推荐 mv \r\nexport function getPersonalizedMv() {\r\n  return service({\r\n    method: 'GET',\r\n    url: '/personalized/mv'\r\n  })\r\n}\r\n\r\n// 获取历史日推可用日期列表(需要登录，携带 cookie)\r\nexport function getHistoryRecommend(cookie) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/history/recommend/songs?cookie=${cookie}`\r\n  })\r\n}\r\n\r\n// 获取历史日推详情数据(需要登录，携带 cookie)\r\nexport function getHistoryRecommendDetail(cookie, date) {\r\n  return service({\r\n    method: 'GET',\r\n    url: `/history/recommend/songs/detail?date=${date}&cookie=${cookie}`\r\n  })\r\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, vShow as _vShow, withCtx as _withCtx, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-730cf7a8\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"recommendSongs\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"载入中...\");\n\nconst _hoisted_3 = {\n  class: \"recommendSongs_top\"\n};\nconst _hoisted_4 = {\n  class: \"title\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"calendar\"\n}, [/*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"icon\",\n  \"aria-hidden\": \"true\"\n}, [/*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-rili\"\n})])], -1));\n\nconst _hoisted_6 = {\n  class: \"date\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"titleInfo\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"titleInfo1\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"每日歌曲推荐\")]), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"titleInfo2\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"根据你的音乐口味生成，每天6:00更新\")])], -1));\n\nconst _hoisted_8 = {\n  class: \"buttons\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"playAll_left\\\" data-v-730cf7a8><svg class=\\\"icon\\\" aria-hidden=\\\"true\\\" data-v-730cf7a8><use xlink:href=\\\"#icon-yousanjiao\\\" data-v-730cf7a8></use></svg><span data-v-730cf7a8>播放全部</span></div><div class=\\\"playAll_right\\\" title=\\\"添加全部到播放列表\\\" data-v-730cf7a8><svg class=\\\"icon jia\\\" aria-hidden=\\\"true\\\" data-v-730cf7a8><use xlink:href=\\\"#icon-jia\\\" data-v-730cf7a8></use></svg></div>\", 2);\n\nconst _hoisted_11 = [_hoisted_9];\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"collect\"\n}, [/*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"icon\",\n  \"aria-hidden\": \"true\"\n}, [/*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-favorite\"\n})]), /*#__PURE__*/_createElementVNode(\"span\", null, \"收藏全部\")], -1));\n\nconst _hoisted_13 = {\n  ref: \"dateBoxChange2\"\n};\nconst _hoisted_14 = {\n  class: \"dateBox\",\n  ref: \"dateBox\"\n};\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"今天\", -1));\n\nconst _hoisted_16 = [_hoisted_15];\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  class: \"songs\"\n};\n\nconst _hoisted_19 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"titles\\\" data-v-730cf7a8><div class=\\\"songTitles\\\" data-v-730cf7a8><span data-v-730cf7a8>音乐标题</span></div><div class=\\\"singers\\\" data-v-730cf7a8><span data-v-730cf7a8>歌手</span></div><div class=\\\"albums\\\" data-v-730cf7a8><span data-v-730cf7a8>专辑</span></div><div class=\\\"duration\\\" data-v-730cf7a8><span data-v-730cf7a8>时长</span></div></div>\", 1);\n\nconst _hoisted_20 = [\"onDblclick\"];\nconst _hoisted_21 = {\n  class: \"songTitle\"\n};\nconst _hoisted_22 = {\n  class: \"no\"\n};\n\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"icon aixin\",\n  \"aria-hidden\": \"true\"\n}, [/*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-aixin\"\n})], -1));\n\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"icon xiazai1\",\n  \"aria-hidden\": \"true\"\n}, [/*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-xiazai1\"\n})], -1));\n\nconst _hoisted_25 = {\n  class: \"songNameBox\"\n};\nconst _hoisted_26 = {\n  class: \"songName\"\n};\nconst _hoisted_27 = {\n  key: 0,\n  class: \"brackets\"\n};\nconst _hoisted_28 = {\n  class: \"songAlia\"\n};\nconst _hoisted_29 = {\n  key: 1,\n  class: \"vertical\"\n};\nconst _hoisted_30 = {\n  class: \"transName\"\n};\nconst _hoisted_31 = {\n  key: 2,\n  class: \"brackets\"\n};\nconst _hoisted_32 = {\n  key: 3,\n  class: \"tag vipTag\"\n};\n\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"VIP\", -1));\n\nconst _hoisted_34 = [_hoisted_33];\nconst _hoisted_35 = [\"onClick\"];\n\nconst _hoisted_36 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"MV\", -1));\n\nconst _hoisted_37 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"icon\",\n  \"aria-hidden\": \"true\"\n}, [/*#__PURE__*/_createElementVNode(\"use\", {\n  \"xlink:href\": \"#icon-yousanjiao\"\n})], -1));\n\nconst _hoisted_38 = [_hoisted_36, _hoisted_37];\nconst _hoisted_39 = {\n  class: \"songSinger\"\n};\nconst _hoisted_40 = {\n  key: 0,\n  class: \"diagonal\"\n};\nconst _hoisted_41 = {\n  key: 0,\n  class: \"brackets\"\n};\nconst _hoisted_42 = {\n  class: \"tns\"\n};\nconst _hoisted_43 = {\n  class: \"transName\"\n};\nconst _hoisted_44 = {\n  key: 1,\n  class: \"brackets\"\n};\nconst _hoisted_45 = {\n  class: \"songDuration\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_van_loading = _resolveComponent(\"van-loading\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createVNode(_component_van_loading, {\n    vertical: \"\",\n    type: \"spinner\"\n  }, {\n    default: _withCtx(() => [_hoisted_2]),\n    _: 1\n  }, 512), [[_vShow, $data.isLoading == 1]]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", null, _toDisplayString(this.date), 1)]), _hoisted_7]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n    class: \"playAll\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.playSongList(0))\n  }, _hoisted_11), _hoisted_12, _createElementVNode(\"div\", {\n    class: \"historicalRecommend\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.getHistoryRecommend && $options.getHistoryRecommend(...args)),\n    ref: \"dateBoxChange1\"\n  }, [_createElementVNode(\"span\", _hoisted_13, \"历史日推\", 512)], 512), _withDirectives(_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", {\n    class: \"date\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.getHistoryRecommendDetail(0))\n  }, _hoisted_16), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dates, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"date\",\n      key: index,\n      onClick: $event => $options.getHistoryRecommendDetail(item)\n    }, [_createElementVNode(\"span\", null, _toDisplayString(item), 1)], 8, _hoisted_17);\n  }), 128))], 512), [[_vShow, this.isDateBox]])])]), _createElementVNode(\"div\", _hoisted_18, [_hoisted_19, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dailySongs, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(index == 0 || index % 2 == 0 ? 'even song' : 'odd song'),\n      onDblclick: $event => $options.playSongList(index)\n    }, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, _toDisplayString($options.formatIndex(index + 1)), 1), _hoisted_23, _hoisted_24, _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"span\", _hoisted_26, _toDisplayString(item.name), 1), item.alia != '' || item.tns ? (_openBlock(), _createElementBlock(\"span\", _hoisted_27, \"(\")) : _createCommentVNode(\"\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.alia, (item1, index) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        class: \"songAlias\",\n        key: index\n      }, [_createElementVNode(\"span\", _hoisted_28, _toDisplayString(item1), 1)]);\n    }), 128)), item.alia != '' && item.tns ? (_openBlock(), _createElementBlock(\"span\", _hoisted_29, \"|\")) : _createCommentVNode(\"\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.tns, (item2, index) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        class: \"tns\",\n        key: index\n      }, [_createElementVNode(\"span\", _hoisted_30, _toDisplayString(item2), 1)]);\n    }), 128)), item.alia != '' || item.tns ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \")\")) : _createCommentVNode(\"\", true), item.fee == 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, _hoisted_34)) : _createCommentVNode(\"\", true), item.mv !== 0 ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 4,\n      class: \"tag mvTag\",\n      onClick: $event => $options.goVideoPlayer(item.mv)\n    }, _hoisted_38, 8, _hoisted_35)) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_39, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.ar, (item3, index3) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        class: \"singerName\",\n        key: index3\n      }, [_createTextVNode(_toDisplayString(item3.name) + \" \", 1), index3 < item.ar.length - 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_40, \"/\")) : _createCommentVNode(\"\", true)]);\n    }), 128))]), _createElementVNode(\"div\", {\n      class: _normalizeClass(item.al.name == '' ? 'songAlbum songAlbumUnknown' : 'songAlbum songAlbumKnown')\n    }, [_createElementVNode(\"span\", null, _toDisplayString(item.al.name || '未知专辑'), 1), item.al.tns.length !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_41, \"(\")) : _createCommentVNode(\"\", true), _createElementVNode(\"span\", _hoisted_42, [_createElementVNode(\"span\", _hoisted_43, _toDisplayString(item.al.tns[0]), 1)]), item.al.tns.length !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_44, \")\")) : _createCommentVNode(\"\", true)], 2), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"span\", null, _toDisplayString(this.formatDuration(item.dt)), 1)])], 42, _hoisted_20);\n  }), 128))])]);\n}","import { getDailyRecommendedSongs, getHistoryRecommend, getHistoryRecommendDetail } from '@/request/api/discoverMusic.js';\nimport { mapMutations } from 'vuex';\nexport default {\n  data() {\n    return {\n      // 是否显示加载中\n      isLoading: 1,\n      // 每日歌曲推荐\n      dailySongs: [],\n      // 当天日期(号)或选择的日期\n      date: 0,\n      // 可查日期盒子的显示\n      isDateBox: 0,\n      // 可查日期\n      dates: []\n    };\n  },\n\n  mounted() {\n    // 获取当天日期(号)\n    this.date = new Date().getDate() >= 10 ? new Date().getDate() : '0' + new Date().getDate(); // 获取每日歌曲推荐\n\n    if (this.dailySongs.length == 0 && sessionStorage.getItem(\"cookie\")) this.getDailyRecommendedSongs(); // 添加可查日期盒子监听器\n\n    window.addEventListener('click', this.otherClose);\n  },\n\n  beforeDestroy() {\n    /* 组件销毁的时候要移除侦听器 */\n    window.removeEventListener('click', this.otherClose);\n  },\n\n  methods: {\n    // 获取每日歌曲推荐\n    async getDailyRecommendedSongs() {\n      // 获取每日推荐歌曲(需要登录)\n      let res = await getDailyRecommendedSongs(sessionStorage.getItem(\"cookie\")); // console.log('每日推荐歌曲', res);\n\n      this.dailySongs = res.data.data.dailySongs; // console.log('当日推荐歌曲', this.dailySongs)\n    },\n\n    // 格式化单曲序号\n    formatIndex(index) {\n      return this.$formatIndex(index);\n    },\n\n    // 格式化播放时长\n    formatDuration(time) {\n      return this.$formatDuration(time);\n    },\n\n    // 获取历史日推可用日期列表\n    async getHistoryRecommend() {\n      this.isDateBox = !this.isDateBox;\n\n      if (this.dates.length == 0) {\n        // 获取历史日推可用日期列表\n        const res = await getHistoryRecommend(sessionStorage.getItem(\"cookie\")); // console.log('历史日推可用日期列表', res);\n\n        this.dates = res.data.data.dates;\n      }\n    },\n\n    // 获取历史日推详情数据\n    async getHistoryRecommendDetail(date) {\n      const today = new Date().getDate() >= 10 ? new Date().getDate() : '0' + new Date().getDate();\n\n      if (date == 0 && this.date !== today) {\n        // 选择当天作日期\n        this.date = new Date().getDate() >= 10 ? new Date().getDate() : '0' + new Date().getDate(); // 获取当日歌曲推荐\n\n        this.getDailyRecommendedSongs();\n      } else {\n        if (date !== 0 && this.date !== date.slice(date.length - 2, date.length + 1)) {\n          // 选择日期\n          this.date = date.slice(date.length - 2, date.length + 1); // console.log('选择日期', this.date);\n          // 获取历史日推详情数据\n\n          const res = await getHistoryRecommendDetail(sessionStorage.getItem(\"cookie\"), date); // console.log('获取', date, '的历史日推详情数据', res.data.data.songs);\n\n          this.dailySongs = res.data.data.songs;\n        }\n      }\n    },\n\n    // 点击其它地方，可查日期盒子关闭\n    otherClose(e) {\n      if (this.isDateBox == true && this.$refs.dateBox && this.$refs.dateBox.contains(e.target)) {// console.log('在可查日期盒子中！');\n      }\n\n      if (this.isDateBox == true && this.$refs.dateBox && !this.$refs.dateBox.contains(e.target) && e.target != this.$refs.dateBoxChange1 && e.target != this.$refs.dateBoxChange2) {\n        // console.log('正在点击其它地方!关闭可查日期盒子');\n        this.isDateBox = false;\n      }\n    },\n\n    // 去往 mv播放页\n    goVideoPlayer(mvid) {\n      this.$router.push({\n        path: '/VideoPlayer',\n        query: {\n          mvid: mvid,\n          type: 1\n        }\n      });\n    },\n\n    // 双击播放歌单列表\n    playSongList(index) {\n      // 显示底部音乐播放组件\n      this.updateIsPlayBox(1); // 更新播放列表\n\n      this.updatePlayList(this.dailySongs); // 更新歌单名(歌曲来源)\n\n      this.updateSongListName('每日歌曲推荐'); // 更新歌单 id(歌曲来源)\n\n      this.updateSongListId(1); // 更新播放列表下标\n\n      this.updatePlayListIndex(index);\n    },\n\n    ...mapMutations(['updateIsPlayBox', 'updatePlayList', 'updateSongListName', 'updateSongListId', 'updatePlayListIndex'])\n  },\n  watch: {\n    dailySongs() {\n      if (this.dailySongs.length !== 0) this.isLoading = 0;\n    }\n\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./RecommendSongs.vue?vue&type=template&id=730cf7a8&scoped=true\"\nimport script from \"./RecommendSongs.vue?vue&type=script&lang=js\"\nexport * from \"./RecommendSongs.vue?vue&type=script&lang=js\"\n\nimport \"./RecommendSongs.vue?vue&type=style&index=0&id=730cf7a8&lang=less&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\86134\\\\Desktop\\\\网易云电脑端\\\\wangyiyun-web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-730cf7a8\"]])\n\nexport default __exports__"],"names":["getHomePage","service","method","url","getSongListClassification","getHotSongListClassification","getSongList","cat","limit","offset","getHighQualityTags","getHighQualitySongList","getAllLists","getNewSong","data","getNewDisc","area","type","getSingersClassification","initial","getDailyRecommendedSongList","cookie","getDailyRecommendedSongs","getRecommendedSongList","getHotPodcasts","getExclusiveRelease","getPrivatecontentList","getPersonalizedMv","getHistoryRecommend","getHistoryRecommendDetail","date","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","ref","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","key","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","render","_ctx","_cache","$props","$setup","$data","$options","_component_van_loading","vertical","default","isLoading","this","onClick","$event","playSongList","args","dates","item","index","isDateBox","dailySongs","onDblclick","formatIndex","name","alia","tns","item1","item2","fee","mv","goVideoPlayer","ar","item3","index3","length","al","formatDuration","dt","mounted","Date","getDate","sessionStorage","getItem","window","addEventListener","otherClose","beforeDestroy","removeEventListener","methods","async","res","$formatIndex","time","$formatDuration","today","slice","songs","e","$refs","dateBox","contains","target","dateBoxChange1","dateBoxChange2","mvid","$router","push","path","query","updateIsPlayBox","updatePlayList","updateSongListName","updateSongListId","updatePlayListIndex","watch","__exports__"],"sourceRoot":""}